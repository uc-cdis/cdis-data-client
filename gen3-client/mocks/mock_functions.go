// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/uc-cdis/cdis-data-client/jwt (interfaces: FunctionInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	jwt "github.com/uc-cdis/gen3-client/gen3-client/jwt"
)

// MockFunctionInterface is a mock of FunctionInterface interface
type MockFunctionInterface struct {
	ctrl     *gomock.Controller
	recorder *MockFunctionInterfaceMockRecorder
}

// MockFunctionInterfaceMockRecorder is the mock recorder for MockFunctionInterface
type MockFunctionInterfaceMockRecorder struct {
	mock *MockFunctionInterface
}

// NewMockFunctionInterface creates a new mock instance
func NewMockFunctionInterface(ctrl *gomock.Controller) *MockFunctionInterface {
	mock := &MockFunctionInterface{ctrl: ctrl}
	mock.recorder = &MockFunctionInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFunctionInterface) EXPECT() *MockFunctionInterfaceMockRecorder {
	return m.recorder
}

// DoRequestWithSignedHeader mocks base method
func (m *MockFunctionInterface) DoRequestWithSignedHeader(arg0 jwt.DoRequest, arg1, arg2, arg3, arg4 string, arg5 []byte) *http.Response {
	ret := m.ctrl.Call(m, "DoRequestWithSignedHeader", arg0, arg1, arg2, arg3, arg4, arg5)
	ret0, _ := ret[0].(*http.Response)
	return ret0
}

// DoRequestWithSignedHeader indicates an expected call of DoRequestWithSignedHeader
func (mr *MockFunctionInterfaceMockRecorder) DoRequestWithSignedHeader(arg0, arg1, arg2, arg3, arg4, arg5 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DoRequestWithSignedHeader", reflect.TypeOf((*MockFunctionInterface)(nil).DoRequestWithSignedHeader), arg0, arg1, arg2, arg3, arg4, arg5)
}
